# version: '3.8'

# volumes:
#   postgres-data:

# services:
#   app:
#     container_name: javadev
#     build:
#       context: .
#       dockerfile: Dockerfile
#     environment:
#       # NOTE: POSTGRES_DB/USER/PASSWORD should match values in db container
#         POSTGRES_PASSWORD: postgres
#         POSTGRES_USER: postgres
#         POSTGRES_DB: postgres
#         POSTGRES_HOSTNAME: postgresdb

#     volumes:
#       - ../..:/workspaces:cached

#     # Overrides default command so things don't shut down after the process ends.
#     command: sleep infinity

#     # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
#     network_mode: service:db

#     # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
#     # (Adding the "ports" property to this file will not forward from a Codespace.)

#   db:
#     container_name: postgresdb
#     image: postgres:latest
#     restart: unless-stopped
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     environment:
#       # NOTE: POSTGRES_DB/USER/PASSWORD should match values in app container
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_USER: postgres
#       POSTGRES_DB: postgres

#     # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
#     # (Adding the "ports" property to this file will not forward from a Codespace.)

#   redis:
#     image: redis:latest
#     ports:
#       - "6379:6379"

version: "3.8"

volumes:
  postgres-data:
  redis-data:

services:
  app:
    container_name: javadev
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOSTNAME: postgresdb
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    network_mode: service:db
    depends_on:
      - db
      - redis

  db:
    container_name: postgresdb
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

  redis:
    container_name: rediscache
    image: redis:6.2-alpine
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
